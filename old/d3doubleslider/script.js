// Generated by CoffeeScript 1.12.5
var circles, circles2, fig, fig2, figh, figw, h, marker_pos, my_slider, my_slider2, slider2_callback1, slider2_callback2, slider2_g, slider_callback1, slider_callback2, slider_g, slider_height, slider_margin, slider_width, svg, svg2, vpos, w, xscale;

slider_width = 800;

slider_height = 80;

slider_margin = 25;

h = 100 + slider_height;

w = slider_width;

figw = w - slider_margin * 2;

figh = h - slider_height;

svg = d3.select("div#chart").insert("svg").attr("id", "chart").attr("height", h).attr("width", w);

fig = svg.insert("g").attr("transform", "translate(" + slider_margin + ",0)");

fig.insert("rect").attr("x", 0).attr("y", 0).attr("height", figh).attr("width", figw).attr("fill", "#ddd");

marker_pos = [0, 14.2, 16.4, 17.5, 18.6, 21.9, 23, 23, 25.1, 28.4, 29.5, 30.6, 31.7, 31.7, 32.8, 33.9, 35, 47, 56.8, 74.3];

xscale = d3.scaleLinear().range([0, figw]).domain([d3.min(marker_pos), d3.max(marker_pos)]);

fig.selectAll("empty").data(marker_pos).enter().insert("line").attr("stroke", "black").attr("stroke-width", 2).attr("x1", (function(_this) {
  return function(d) {
    return xscale(d);
  };
})(this)).attr("x2", (function(_this) {
  return function(d) {
    return xscale(d);
  };
})(this)).attr("y1", 0).attr("y2", figh);

vpos = [figh / 3, 2 * figh / 3];

fig.selectAll("empty").data(vpos).enter().insert("line").attr("x1", 0).attr("x2", figw).attr("y1", function(d) {
  return d;
}).attr("y2", function(d) {
  return d;
}).attr("stroke", function(d, i) {
  if (i === 0) {
    return "slateblue";
  }
  return "orchid";
}).attr("stroke-width", 2);

circles = [0, 1].map(function(i) {
  return fig.insert("circle").attr("id", "circle").attr("cx", Math.random() * figw).attr("cy", vpos[i]).attr("r", 10).attr("fill", i === 0 ? "slateblue" : "orchid");
});

slider_g = svg.insert("g").attr("transform", "translate(0," + figh + ")");

slider_callback1 = function(sl) {
  return circles[0].attr("cx", xscale(sl.value()[0]));
};

slider_callback2 = function(sl) {
  return circles[1].attr("cx", xscale(sl.value()[1]));
};

my_slider = double_slider();

my_slider(slider_g, slider_callback1, slider_callback2, [d3.min(marker_pos), d3.max(marker_pos)], marker_pos);

svg2 = d3.select("div#chart2").insert("svg").attr("id", "chart").attr("height", h).attr("width", w);

fig2 = svg2.insert("g").attr("transform", "translate(" + slider_margin + ",0)");

fig2.insert("rect").attr("x", 0).attr("y", 0).attr("height", figh).attr("width", figw).attr("fill", "#ddd");

fig2.selectAll("empty").data(marker_pos).enter().insert("line").attr("stroke", "black").attr("stroke-width", 2).attr("x1", (function(_this) {
  return function(d) {
    return xscale(d);
  };
})(this)).attr("x2", (function(_this) {
  return function(d) {
    return xscale(d);
  };
})(this)).attr("y1", 0).attr("y2", figh);

fig2.selectAll("empty").data(vpos).enter().insert("line").attr("x1", 0).attr("x2", figw).attr("y1", function(d) {
  return d;
}).attr("y2", function(d) {
  return d;
}).attr("stroke", function(d, i) {
  if (i === 0) {
    return "slateblue";
  }
  return "orchid";
}).attr("stroke-width", 2);

circles2 = [0, 1].map(function(i) {
  return fig2.insert("circle").attr("id", "circle").attr("cx", Math.random() * figw).attr("cy", vpos[i]).attr("r", 10).attr("fill", i === 0 ? "slateblue" : "orchid");
});

slider2_g = svg2.insert("g").attr("transform", "translate(0," + figh + ")");

slider2_callback1 = function(sl) {
  return circles2[0].attr("cx", xscale(sl.value()[0]));
};

slider2_callback2 = function(sl) {
  return circles2[1].attr("cx", xscale(sl.value()[1]));
};

my_slider2 = double_slider();

my_slider2(slider2_g, slider2_callback1, slider2_callback2, [d3.min(marker_pos), d3.max(marker_pos)], marker_pos);
