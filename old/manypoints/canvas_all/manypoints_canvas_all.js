// Generated by CoffeeScript 1.8.0
var canvasApp;

canvasApp = function() {
  var canvas, circles, context, createCircle, drawCircle, drawScreen, getMousePos, h, i, lastCircles, n_circles, theseCircles, w, _i;
  w = 800;
  h = 800;
  d3.select("div#chart").append("canvas").attr("id", "canvasOne").attr("width", w).attr("height", h);
  createCircle = function() {
    var circ;
    circ = {
      r: Math.random() * 3 + 3
    };
    circ.x = circ.r + Math.random() * (w - circ.r * 2);
    circ.y = circ.r + Math.random() * (h - circ.r * 2);
    return circ;
  };
  n_circles = 100000;
  circles = [];
  for (i = _i = 1; 1 <= n_circles ? _i <= n_circles : _i >= n_circles; i = 1 <= n_circles ? ++_i : --_i) {
    circles.push(createCircle());
  }
  canvas = d3.select("canvas#canvasOne").node();
  context = canvas.getContext("2d");
  drawCircle = function(circ, color) {
    context.fillStyle = color;
    context.lineWidth = 2;
    context.beginPath();
    context.moveTo(circ.x, circ.y);
    context.arc(circ.x, circ.y, circ.r, 0, 2 * Math.PI, false);
    context.closePath();
    context.stroke();
    return context.fill();
  };
  drawScreen = function() {
    context.fillStyle = "#bbb";
    context.strokeStyle = "black";
    context.lineWidth = 2;
    context.fillRect(0, 0, w, h);
    context.strokeRect(0, 0, w, h);
    return circles.map(function(circ) {
      return drawCircle(circ, "slateblue");
    });
  };
  drawScreen();
  getMousePos = function(canvas, event) {
    var rect;
    rect = canvas.getBoundingClientRect();
    return {
      x: event.clientX - rect.left,
      y: event.clientY - rect.top
    };
  };
  theseCircles = [];
  lastCircles = [];
  return canvas.addEventListener("mousemove", function(event) {
    var circ, d, message, mousePos, overlap, _j, _ref;
    lastCircles = theseCircles;
    theseCircles = [];
    mousePos = getMousePos(canvas, event);
    overlap = 0;
    for (i = _j = 0, _ref = circles.length; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {
      circ = circles[i];
      d = Math.sqrt(Math.pow(circ.x - mousePos.x, 2) + Math.pow(circ.y - mousePos.y, 2));
      if (d <= circ.r) {
        theseCircles.push(circ);
      }
    }
    message = "On " + theseCircles.length + " points";
    d3.select("p#message").text(message);
    lastCircles.map(function(circ) {
      return drawCircle(circ, "slateblue");
    });
    return theseCircles.map(function(circ) {
      return drawCircle(circ, "Orchid");
    });
  });
};

window.onload = canvasApp;
